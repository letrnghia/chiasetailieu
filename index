import React, { useState } from 'react';
import { Folder, FileText, Book, BookOpen, ChevronDown, ChevronRight } from 'lucide-react';
import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';

const CourseMaterialsHub = () => {
  const [expandedSubject, setExpandedSubject] = useState(null);
  const [expandedCategory, setExpandedCategory] = useState(null);

  const subjects = [
    {
      id: 1,
      name: "Web Development",
      categories: [
        {
          name: "Lectures",
          materials: [
            { title: "HTML Basics", type: "pdf" },
            { title: "CSS Fundamentals", type: "pdf" },
            { title: "JavaScript Intro", type: "pdf" }
          ]
        },
        {
          name: "Exercises",
          materials: [
            { title: "HTML Practice Sheet", type: "doc" },
            { title: "CSS Layout Challenge", type: "doc" }
          ]
        },
        {
          name: "Reference Materials",
          materials: [
            { title: "Web Standards Guide", type: "pdf" },
            { title: "Browser Compatibility Chart", type: "pdf" }
          ]
        }
      ]
    },
    {
      id: 2,
      name: "Database Systems",
      categories: [
        {
          name: "Lectures",
          materials: [
            { title: "SQL Fundamentals", type: "pdf" },
            { title: "Database Design", type: "pdf" }
          ]
        },
        {
          name: "Exercises",
          materials: [
            { title: "SQL Query Practice", type: "doc" },
            { title: "ERD Workshop", type: "doc" }
          ]
        },
        {
          name: "Reference Materials",
          materials: [
            { title: "SQL Cheat Sheet", type: "pdf" },
            { title: "Normalization Guide", type: "pdf" }
          ]
        }
      ]
    }
  ];

  const getIcon = (category) => {
    switch (category) {
      case "Lectures":
        return <Book className="w-4 h-4" />;
      case "Exercises":
        return <FileText className="w-4 h-4" />;
      case "Reference Materials":
        return <BookOpen className="w-4 h-4" />;
      default:
        return <Folder className="w-4 h-4" />;
    }
  };

  return (
    <div className="max-w-4xl mx-auto p-4">
      <Card>
        <CardHeader>
          <CardTitle className="text-2xl font-bold">Course Materials</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {subjects.map((subject) => (
              <div key={subject.id} className="border rounded-lg">
                <button
                  className="w-full flex items-center justify-between p-4 hover:bg-gray-50"
                  onClick={() => setExpandedSubject(expandedSubject === subject.id ? null : subject.id)}
                >
                  <div className="flex items-center gap-2">
                    <Folder className="w-5 h-5 text-blue-500" />
                    <span className="font-medium">{subject.name}</span>
                  </div>
                  {expandedSubject === subject.id ? (
                    <ChevronDown className="w-5 h-5" />
                  ) : (
                    <ChevronRight className="w-5 h-5" />
                  )}
                </button>

                {expandedSubject === subject.id && (
                  <div className="pl-6 pr-4 pb-4">
                    {subject.categories.map((category, idx) => (
                      <div key={idx} className="mt-2">
                        <button
                          className="w-full flex items-center justify-between p-2 hover:bg-gray-50 rounded"
                          onClick={() => setExpandedCategory(expandedCategory === `${subject.id}-${idx}` ? null : `${subject.id}-${idx}`)}
                        >
                          <div className="flex items-center gap-2">
                            {getIcon(category.name)}
                            <span className="font-medium">{category.name}</span>
                          </div>
                          {expandedCategory === `${subject.id}-${idx}` ? (
                            <ChevronDown className="w-4 h-4" />
                          ) : (
                            <ChevronRight className="w-4 h-4" />
                          )}
                        </button>

                        {expandedCategory === `${subject.id}-${idx}` && (
                          <div className="pl-8 mt-2 space-y-2">
                            {category.materials.map((material, midx) => (
                              <div
                                key={midx}
                                className="flex items-center gap-2 p-2 hover:bg-gray-50 rounded cursor-pointer"
                              >
                                <FileText className="w-4 h-4 text-gray-500" />
                                <span>{material.title}</span>
                                <span className="text-xs text-gray-500 ml-2">
                                  ({material.type})
                                </span>
                              </div>
                            ))}
                          </div>
                        )}
                      </div>
                    ))}
                  </div>
                )}
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default CourseMaterialsHub;
